{"ast":null,"code":"import _classCallCheck from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Form,Input,Icon,Button,Select}from\"antd\";import{connect}from\"react-redux\";import{NavLink}from\"react-router-dom\";import*as actions from\"../store/actions/auth\";var FormItem=Form.Item;var Option=Select.Option;var RegistrationForm=/*#__PURE__*/function(_React$Component){_inherits(RegistrationForm,_React$Component);var _super=_createSuper(RegistrationForm);function RegistrationForm(){var _this;_classCallCheck(this,RegistrationForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={confirmDirty:false};_this.handleSubmit=function(e){e.preventDefault();_this.props.form.validateFieldsAndScroll(function(err,values){if(!err){var is_student=false;if(values.userType===\"student\")is_student=true;_this.props.onAuth(values.userName,values.email,values.password,values.confirm,is_student);// this.props.history.push(\"/\");\n}});};_this.handleConfirmBlur=function(e){var value=e.target.value;_this.setState({confirmDirty:_this.state.confirmDirty||!!value});};_this.compareToFirstPassword=function(rule,value,callback){var form=_this.props.form;if(value&&value!==form.getFieldValue(\"password\")){callback(\"Two passwords that you enter is inconsistent!\");}else{callback();}};_this.validateToNextPassword=function(rule,value,callback){var form=_this.props.form;if(value&&_this.state.confirmDirty){form.validateFields([\"confirm\"],{force:true});}callback();};return _this;}_createClass(RegistrationForm,[{key:\"render\",value:function render(){var getFieldDecorator=this.props.form.getFieldDecorator;return/*#__PURE__*/React.createElement(Form,{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(FormItem,null,getFieldDecorator(\"userName\",{rules:[{required:true,message:\"Please input your username!\"}]})(/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(Icon,{type:\"user\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Username\"}))),/*#__PURE__*/React.createElement(FormItem,null,getFieldDecorator(\"email\",{rules:[{type:\"email\",message:\"The input is not valid E-mail!\"},{required:true,message:\"Please input your E-mail!\"}]})(/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(Icon,{type:\"mail\",style:{color:\"rgba(0,0,0,.25)\"}}),placeholder:\"Email\"}))),/*#__PURE__*/React.createElement(FormItem,null,getFieldDecorator(\"password\",{rules:[{required:true,message:\"Please input your password!\"},{validator:this.validateToNextPassword}]})(/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(Icon,{type:\"lock\",style:{color:\"rgba(0,0,0,.25)\"}}),type:\"password\",placeholder:\"Password\"}))),/*#__PURE__*/React.createElement(FormItem,null,getFieldDecorator(\"confirm\",{rules:[{required:true,message:\"Please confirm your password!\"},{validator:this.compareToFirstPassword}]})(/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(Icon,{type:\"lock\",style:{color:\"rgba(0,0,0,.25)\"}}),type:\"password\",placeholder:\"Password\",onBlur:this.handleConfirmBlur}))),/*#__PURE__*/React.createElement(FormItem,null,getFieldDecorator(\"userType\",{rules:[{required:true,message:\"Please select a user!\"}]})(/*#__PURE__*/React.createElement(Select,{placeholder:\"Select a user type\"},/*#__PURE__*/React.createElement(Option,{value:\"student\"},\"Student\"),/*#__PURE__*/React.createElement(Option,{value:\"teacher\"},\"Teacher\")))),/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",style:{marginRight:\"10px\"}},\"Signup\"),\"Or\",/*#__PURE__*/React.createElement(NavLink,{style:{marginRight:\"10px\"},to:\"/login/\"},\"login\")));}}]);return RegistrationForm;}(React.Component);var WrappedRegistrationForm=Form.create()(RegistrationForm);var mapStateToProps=function mapStateToProps(state){return{loading:state.auth.loading,error:state.auth.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(username,email,password1,password2,is_student){return dispatch(actions.authSignup(username,email,password1,password2,is_student));}};};export default connect(mapStateToProps,mapDispatchToProps)(WrappedRegistrationForm);","map":{"version":3,"sources":["H:/teach-me-django-master/src/containers/Signup.js"],"names":["React","Form","Input","Icon","Button","Select","connect","NavLink","actions","FormItem","Item","Option","RegistrationForm","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","is_student","userType","onAuth","userName","email","password","confirm","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","rules","required","message","color","type","validator","marginRight","Component","WrappedRegistrationForm","create","mapStateToProps","loading","auth","error","mapDispatchToProps","dispatch","username","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Icon, Button, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        let is_student = false;\n        if (values.userType === \"student\") is_student = true;\n        this.props.onAuth(\n          values.userName,\n          values.email,\n          values.password,\n          values.confirm,\n          is_student\n        );\n        // this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem>\n          {getFieldDecorator(\"userName\", {\n            rules: [{ required: true, message: \"Please input your username!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                type: \"email\",\n                message: \"The input is not valid E-mail!\"\n              },\n              {\n                required: true,\n                message: \"Please input your E-mail!\"\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Email\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please input your password!\"\n              },\n              {\n                validator: this.validateToNextPassword\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"confirm\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please confirm your password!\"\n              },\n              {\n                validator: this.compareToFirstPassword\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              onBlur={this.handleConfirmBlur}\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"userType\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select a user!\"\n              }\n            ]\n          })(\n            <Select placeholder=\"Select a user type\">\n              <Option value=\"student\">Student</Option>\n              <Option value=\"teacher\">Teacher</Option>\n            </Select>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{ marginRight: \"10px\" }}\n          >\n            Signup\n          </Button>\n          Or\n          <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\n            login\n          </NavLink>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2, is_student) =>\n      dispatch(\n        actions.authSignup(username, email, password1, password2, is_student)\n      )\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedRegistrationForm);\n"]},"metadata":{},"sourceType":"module"}