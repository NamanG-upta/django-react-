{"ast":null,"code":"var _jsxFileName = \"H:\\\\teach-me-django-master\\\\src\\\\containers\\\\QuestionForm.js\";\nimport React from \"react\";\nimport { Form, Input, Icon, Button } from \"antd\";\nimport Hoc from \"../hoc/hoc\";\nconst FormItem = Form.Item;\nlet id = 0;\n\nclass QuestionForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.remove = k => {\n      const {\n        form\n      } = this.props;\n      const keys = form.getFieldValue(\"keys\");\n      if (keys.length === 1) return;\n      form.setFieldsValue({\n        keys: keys.filter(key => key !== k)\n      });\n    };\n\n    this.add = () => {\n      const {\n        form\n      } = this.props;\n      const keys = form.getFieldValue(\"keys\");\n      const nextKeys = keys.concat(++id);\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldValue\n    } = this.props.form;\n    getFieldDecorator(\"keys\", {\n      initialValue: []\n    });\n    const keys = getFieldValue(\"keys\");\n    const formItems = keys.map((k, index) => /*#__PURE__*/React.createElement(FormItem, {\n      label: index === 0 ? \"Choices\" : \"\",\n      key: k,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, getFieldDecorator(`questions[${this.props.id}]choices[${k}]`, {\n      validateTrigger: [\"onChange\", \"onBlur\"],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Please input a choice to the question\"\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Answer choice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    })), keys.length > 1 ? /*#__PURE__*/React.createElement(Icon, {\n      className: \"dynamic-delete-button\",\n      type: \"minus-circle-o\",\n      disabled: keys.length === 1,\n      onClick: () => this.remove(k),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }) : null));\n    return /*#__PURE__*/React.createElement(Hoc, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, {\n      label: \"Question: \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, getFieldDecorator(`question[${this.props.id}]`, {\n      validateTrigger: [\"onChange\", \"onBlur\"],\n      rules: [{\n        required: true,\n        message: \"Please input a question\"\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Add a question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, {\n      label: \"Answer: \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, getFieldDecorator(`answers[${this.props.id}]`, {\n      validateTrigger: [\"onChange\", \"onBlur\"],\n      rules: [{\n        required: true,\n        message: \"Please input an answer to this question\"\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"What is the answer?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 14\n      }\n    }))), formItems, /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"dashed\",\n      onClick: this.add,\n      style: {\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), \" Add an answer choice\")));\n  }\n\n}\n\nexport default QuestionForm;","map":{"version":3,"sources":["H:/teach-me-django-master/src/containers/QuestionForm.js"],"names":["React","Form","Input","Icon","Button","Hoc","FormItem","Item","id","QuestionForm","Component","remove","k","form","props","keys","getFieldValue","length","setFieldsValue","filter","key","add","nextKeys","concat","render","getFieldDecorator","initialValue","formItems","map","index","validateTrigger","rules","required","whitespace","message","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Icon, Button } from \"antd\";\nimport Hoc from \"../hoc/hoc\";\n\nconst FormItem = Form.Item;\n\nlet id = 0;\n\nclass QuestionForm extends React.Component {\n  remove = k => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    if (keys.length === 1) return;\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k)\n    });\n  };\n\n  add = () => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    const nextKeys = keys.concat(++id);\n    form.setFieldsValue({\n      keys: nextKeys\n    });\n  };\n\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    getFieldDecorator(\"keys\", { initialValue: [] });\n    const keys = getFieldValue(\"keys\");\n    const formItems = keys.map((k, index) => (\n      <FormItem label={index === 0 ? \"Choices\" : \"\"} key={k}>\n        {getFieldDecorator(`questions[${this.props.id}]choices[${k}]`, {\n          validateTrigger: [\"onChange\", \"onBlur\"],\n          rules: [\n            {\n              required: true,\n              whitespace: true,\n              message: \"Please input a choice to the question\"\n            }\n          ]\n        })(<Input placeholder=\"Answer choice\" />)}\n        {keys.length > 1 ? (\n          <Icon\n            className=\"dynamic-delete-button\"\n            type=\"minus-circle-o\"\n            disabled={keys.length === 1}\n            onClick={() => this.remove(k)}\n          />\n        ) : null}\n      </FormItem>\n    ));\n    return (\n      <Hoc>\n        <FormItem label=\"Question: \">\n          {getFieldDecorator(`question[${this.props.id}]`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input a question\"\n              }\n            ]\n          })(<Input placeholder=\"Add a question\" />)}\n        </FormItem>\n        <FormItem label=\"Answer: \">\n          {getFieldDecorator(`answers[${this.props.id}]`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input an answer to this question\"\n              }\n            ]\n          })(<Input placeholder=\"What is the answer?\" />)}\n        </FormItem>\n        {formItems}\n        <FormItem>\n          <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\n            <Icon type=\"plus\" /> Add an answer choice\n          </Button>\n        </FormItem>\n      </Hoc>\n    );\n  }\n}\n\nexport default QuestionForm;\n"]},"metadata":{},"sourceType":"module"}