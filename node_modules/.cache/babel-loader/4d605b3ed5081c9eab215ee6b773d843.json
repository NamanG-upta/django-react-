{"ast":null,"code":"var _jsxFileName = \"H:\\\\teach-me-django-master\\\\src\\\\containers\\\\AssignmentCreate.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input, Icon, Button, Divider } from \"antd\";\nimport QuestionForm from \"./QuestionForm\";\nimport Hoc from \"../hoc/hoc\";\nimport { createASNT } from \"../store/actions/assignments\";\nconst FormItem = Form.Item;\n\nclass AssignmentCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formCount: 1\n    };\n\n    this.remove = () => {\n      const {\n        formCount\n      } = this.state;\n      this.setState({\n        formCount: formCount - 1\n      });\n    };\n\n    this.add = () => {\n      const {\n        formCount\n      } = this.state;\n      this.setState({\n        formCount: formCount + 1\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n          const questions = [];\n\n          for (let i = 0; i < values.questions.length; i += 1) {\n            questions.push({\n              title: values.question[i],\n              choices: values.questions[i].choices.filter(el => el !== null),\n              answer: values.answers[i]\n            });\n          }\n\n          const asnt = {\n            teacher: this.props.username,\n            title: values.title,\n            questions\n          };\n          this.props.createASNT(this.props.token, asnt);\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const questions = [];\n\n    for (let i = 0; i < this.state.formCount; i += 1) {\n      questions.push( /*#__PURE__*/React.createElement(Hoc, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, questions.length > 0 ? /*#__PURE__*/React.createElement(Icon, {\n        className: \"dynamic-delete-button\",\n        type: \"minus-circle-o\",\n        disabled: questions.length === 0,\n        onClick: () => this.remove(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }) : null, /*#__PURE__*/React.createElement(QuestionForm, Object.assign({\n        id: i\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Create an assignment\"), /*#__PURE__*/React.createElement(FormItem, {\n      label: \"Title: \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, getFieldDecorator(`title`, {\n      validateTrigger: [\"onChange\", \"onBlur\"],\n      rules: [{\n        required: true,\n        message: \"Please input a title\"\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Add a title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }\n    }))), questions, /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"secondary\",\n      onClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }), \" Add question\")), /*#__PURE__*/React.createElement(FormItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst WrappedAssignmentCreate = Form.create()(AssignmentCreate);\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    loading: state.assignments.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createASNT: (token, asnt) => dispatch(createASNT(token, asnt))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedAssignmentCreate);","map":{"version":3,"sources":["H:/teach-me-django-master/src/containers/AssignmentCreate.js"],"names":["React","connect","Form","Input","Icon","Button","Divider","QuestionForm","Hoc","createASNT","FormItem","Item","AssignmentCreate","Component","state","formCount","remove","setState","add","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","questions","i","length","push","title","question","choices","filter","el","answer","answers","asnt","teacher","username","token","render","getFieldDecorator","validateTrigger","rules","required","message","WrappedAssignmentCreate","create","mapStateToProps","auth","loading","assignments","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input, Icon, Button, Divider } from \"antd\";\nimport QuestionForm from \"./QuestionForm\";\nimport Hoc from \"../hoc/hoc\";\nimport { createASNT } from \"../store/actions/assignments\";\n\nconst FormItem = Form.Item;\n\nclass AssignmentCreate extends React.Component {\n  state = {\n    formCount: 1\n  };\n\n  remove = () => {\n    const { formCount } = this.state;\n    this.setState({\n      formCount: formCount - 1\n    });\n  };\n\n  add = () => {\n    const { formCount } = this.state;\n    this.setState({\n      formCount: formCount + 1\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        const questions = [];\n        for (let i = 0; i < values.questions.length; i += 1) {\n          questions.push({\n            title: values.question[i],\n            choices: values.questions[i].choices.filter(el => el !== null),\n            answer: values.answers[i]\n          });\n        }\n        const asnt = {\n          teacher: this.props.username,\n          title: values.title,\n          questions\n        };\n        this.props.createASNT(this.props.token, asnt);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const questions = [];\n    for (let i = 0; i < this.state.formCount; i += 1) {\n      questions.push(\n        <Hoc key={i}>\n          {questions.length > 0 ? (\n            <Icon\n              className=\"dynamic-delete-button\"\n              type=\"minus-circle-o\"\n              disabled={questions.length === 0}\n              onClick={() => this.remove()}\n            />\n          ) : null}\n          <QuestionForm id={i} {...this.props} />\n          <Divider />\n        </Hoc>\n      );\n    }\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <h1>Create an assignment</h1>\n        <FormItem label={\"Title: \"}>\n          {getFieldDecorator(`title`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input a title\"\n              }\n            ]\n          })(<Input placeholder=\"Add a title\" />)}\n        </FormItem>\n        {questions}\n        <FormItem>\n          <Button type=\"secondary\" onClick={this.add}>\n            <Icon type=\"plus\" /> Add question\n          </Button>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedAssignmentCreate = Form.create()(AssignmentCreate);\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    loading: state.assignments.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createASNT: (token, asnt) => dispatch(createASNT(token, asnt))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedAssignmentCreate);\n"]},"metadata":{},"sourceType":"module"}