{"ast":null,"code":"import _classCallCheck from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{connect}from\"react-redux\";import{Card,Skeleton,message}from\"antd\";import Questions from\"./Questions\";import Choices from\"../components/Choices\";import{getASNTSDetail as _getASNTSDetail}from\"../store/actions/assignments\";import{createGradedASNT as _createGradedASNT}from\"../store/actions/gradedAssignments\";import Hoc from\"../hoc/hoc\";var cardStyle={marginTop:\"20px\",marginBottom:\"20px\"};var AssignmentDetail=/*#__PURE__*/function(_React$Component){_inherits(AssignmentDetail,_React$Component);var _super=_createSuper(AssignmentDetail);function AssignmentDetail(){var _this;_classCallCheck(this,AssignmentDetail);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={usersAnswers:{}};_this.onChange=function(e,qId){var usersAnswers=_this.state.usersAnswers;usersAnswers[qId]=e.target.value;_this.setState({usersAnswers:usersAnswers});};return _this;}_createClass(AssignmentDetail,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.token!==undefined&&this.props.token!==null){this.props.getASNTSDetail(this.props.token,this.props.match.params.id);}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(newProps){if(newProps.token!==this.props.token){if(newProps.token!==undefined&&newProps.token!==null){this.props.getASNTSDetail(newProps.token,this.props.match.params.id);}}}},{key:\"handleSubmit\",value:function handleSubmit(){message.success(\"Submitting your assignment!\");var usersAnswers=this.state.usersAnswers;var asnt={username:this.props.username,asntId:this.props.currentAssignment.id,answers:usersAnswers};this.props.createGradedASNT(this.props.token,asnt);}},{key:\"render\",value:function render(){var _this2=this;var currentAssignment=this.props.currentAssignment;var title=currentAssignment.title;var usersAnswers=this.state.usersAnswers;return/*#__PURE__*/React.createElement(Hoc,null,Object.keys(currentAssignment).length>0?/*#__PURE__*/React.createElement(Hoc,null,this.props.loading?/*#__PURE__*/React.createElement(Skeleton,{active:true}):/*#__PURE__*/React.createElement(Card,{title:title},/*#__PURE__*/React.createElement(Questions,{submit:function submit(){return _this2.handleSubmit();},questions:currentAssignment.questions.map(function(q){return/*#__PURE__*/React.createElement(Card,{style:cardStyle,type:\"inner\",key:q.id,title:\"\".concat(q.order,\". \").concat(q.question)},/*#__PURE__*/React.createElement(Choices,{questionId:q.order,choices:q.choices,change:_this2.onChange,usersAnswers:usersAnswers}));})}))):null);}}]);return AssignmentDetail;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{token:state.auth.token,currentAssignment:state.assignments.currentAssignment,loading:state.assignments.loading,username:state.auth.username};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getASNTSDetail:function getASNTSDetail(token,id){return dispatch(_getASNTSDetail(token,id));},createGradedASNT:function createGradedASNT(token,asnt){return dispatch(_createGradedASNT(token,asnt));}};};export default connect(mapStateToProps,mapDispatchToProps)(AssignmentDetail);","map":{"version":3,"sources":["H:/teach-me-django-master/src/containers/AssignmentDetail.js"],"names":["React","connect","Card","Skeleton","message","Questions","Choices","getASNTSDetail","createGradedASNT","Hoc","cardStyle","marginTop","marginBottom","AssignmentDetail","state","usersAnswers","onChange","e","qId","target","value","setState","props","token","undefined","match","params","id","newProps","success","asnt","username","asntId","currentAssignment","answers","title","Object","keys","length","loading","handleSubmit","questions","map","q","order","question","choices","Component","mapStateToProps","auth","assignments","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Skeleton, message } from \"antd\";\nimport Questions from \"./Questions\";\nimport Choices from \"../components/Choices\";\nimport { getASNTSDetail } from \"../store/actions/assignments\";\nimport { createGradedASNT } from \"../store/actions/gradedAssignments\";\nimport Hoc from \"../hoc/hoc\";\n\nconst cardStyle = {\n  marginTop: \"20px\",\n  marginBottom: \"20px\"\n};\n\nclass AssignmentDetail extends React.Component {\n  state = {\n    usersAnswers: {}\n  };\n\n  componentDidMount() {\n    if (this.props.token !== undefined && this.props.token !== null) {\n      this.props.getASNTSDetail(this.props.token, this.props.match.params.id);\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.token !== this.props.token) {\n      if (newProps.token !== undefined && newProps.token !== null) {\n        this.props.getASNTSDetail(newProps.token, this.props.match.params.id);\n      }\n    }\n  }\n\n  onChange = (e, qId) => {\n    const { usersAnswers } = this.state;\n    usersAnswers[qId] = e.target.value;\n    this.setState({ usersAnswers });\n  };\n\n  handleSubmit() {\n    message.success(\"Submitting your assignment!\");\n    const { usersAnswers } = this.state;\n    const asnt = {\n      username: this.props.username,\n      asntId: this.props.currentAssignment.id,\n      answers: usersAnswers\n    };\n    this.props.createGradedASNT(this.props.token, asnt);\n  }\n\n  render() {\n    const { currentAssignment } = this.props;\n    const { title } = currentAssignment;\n    const { usersAnswers } = this.state;\n    return (\n      <Hoc>\n        {Object.keys(currentAssignment).length > 0 ? (\n          <Hoc>\n            {this.props.loading ? (\n              <Skeleton active />\n            ) : (\n              <Card title={title}>\n                <Questions\n                  submit={() => this.handleSubmit()}\n                  questions={currentAssignment.questions.map(q => {\n                    return (\n                      <Card\n                        style={cardStyle}\n                        type=\"inner\"\n                        key={q.id}\n                        title={`${q.order}. ${q.question}`}\n                      >\n                        <Choices\n                          questionId={q.order}\n                          choices={q.choices}\n                          change={this.onChange}\n                          usersAnswers={usersAnswers}\n                        />\n                      </Card>\n                    );\n                  })}\n                />\n              </Card>\n            )}\n          </Hoc>\n        ) : null}\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    currentAssignment: state.assignments.currentAssignment,\n    loading: state.assignments.loading,\n    username: state.auth.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getASNTSDetail: (token, id) => dispatch(getASNTSDetail(token, id)),\n    createGradedASNT: (token, asnt) => dispatch(createGradedASNT(token, asnt))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AssignmentDetail);\n"]},"metadata":{},"sourceType":"module"}