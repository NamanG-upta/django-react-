{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(res => {\n      const user = {\n        token: res.data.key,\n        username,\n        userId: res.data.user,\n        is_student: res.data.user_type.is_student,\n        is_teacher: res.data.user_type.is_teacher,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch(authSuccess(user));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2, is_student) => {\n  return dispatch => {\n    dispatch(authStart());\n    const user = {\n      username,\n      email,\n      password1,\n      password2,\n      is_student,\n      is_teacher: !is_student\n    };\n    axios.post(\"http://127.0.0.1:8000/rest-auth/registration/\", user).then(res => {\n      const user = {\n        token: res.data.key,\n        username,\n        userId: res.data.user,\n        is_student,\n        is_teacher: !is_student,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch(authSuccess(user));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(user.expirationDate);\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["H:/teach-me-django-master/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","user","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","token","data","key","userId","is_student","user_type","is_teacher","expirationDate","Date","getTime","setItem","JSON","stringify","catch","err","authSignup","email","password1","password2","authCheckState","parse","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const user = {\n          token: res.data.key,\n          username,\n          userId: res.data.user,\n          is_student: res.data.user_type.is_student,\n          is_teacher: res.data.user_type.is_teacher,\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (\n  username,\n  email,\n  password1,\n  password2,\n  is_student\n) => {\n  return dispatch => {\n    dispatch(authStart());\n    const user = {\n      username,\n      email,\n      password1,\n      password2,\n      is_student,\n      is_teacher: !is_student\n    };\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", user)\n      .then(res => {\n        const user = {\n          token: res.data.key,\n          username,\n          userId: res.data.user,\n          is_student,\n          is_teacher: !is_student,\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(user.expirationDate);\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}