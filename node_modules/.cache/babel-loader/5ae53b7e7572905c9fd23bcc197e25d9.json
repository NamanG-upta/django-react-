{"ast":null,"code":"import _classCallCheck from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{connect}from\"react-redux\";import{Form,Input,Icon,Button,Divider}from\"antd\";import QuestionForm from\"./QuestionForm\";import Hoc from\"../hoc/hoc\";import{createASNT as _createASNT}from\"../store/actions/assignments\";var FormItem=Form.Item;var AssignmentCreate=/*#__PURE__*/function(_React$Component){_inherits(AssignmentCreate,_React$Component);var _super=_createSuper(AssignmentCreate);function AssignmentCreate(){var _this;_classCallCheck(this,AssignmentCreate);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={formCount:1};_this.remove=function(){var formCount=_this.state.formCount;_this.setState({formCount:formCount-1});};_this.add=function(){var formCount=_this.state.formCount;_this.setState({formCount:formCount+1});};_this.handleSubmit=function(e){e.preventDefault();_this.props.form.validateFields(function(err,values){if(!err){console.log(\"Received values of form: \",values);var questions=[];for(var i=0;i<values.questions.length;i+=1){questions.push({title:values.question[i],choices:values.questions[i].choices.filter(function(el){return el!==null;}),answer:values.answers[i]});}var asnt={teacher:_this.props.username,title:values.title,questions:questions};_this.props.createASNT(_this.props.token,asnt);}});};return _this;}_createClass(AssignmentCreate,[{key:\"render\",value:function render(){var _this2=this;var getFieldDecorator=this.props.form.getFieldDecorator;var questions=[];for(var i=0;i<this.state.formCount;i+=1){questions.push(/*#__PURE__*/React.createElement(Hoc,{key:i},questions.length>0?/*#__PURE__*/React.createElement(Icon,{className:\"dynamic-delete-button\",type:\"minus-circle-o\",disabled:questions.length===0,onClick:function onClick(){return _this2.remove();}}):null,/*#__PURE__*/React.createElement(QuestionForm,Object.assign({id:i},this.props)),/*#__PURE__*/React.createElement(Divider,null)));}return/*#__PURE__*/React.createElement(Form,{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"h1\",null,\"Create an assignment\"),/*#__PURE__*/React.createElement(FormItem,{label:\"Title: \"},getFieldDecorator(\"title\",{validateTrigger:[\"onChange\",\"onBlur\"],rules:[{required:true,message:\"Please input a title\"}]})(/*#__PURE__*/React.createElement(Input,{placeholder:\"Add a title\"}))),questions,/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(Button,{type:\"secondary\",onClick:this.add},/*#__PURE__*/React.createElement(Icon,{type:\"plus\"}),\" Add question\")),/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"Submit\")));}}]);return AssignmentCreate;}(React.Component);var WrappedAssignmentCreate=Form.create()(AssignmentCreate);var mapStateToProps=function mapStateToProps(state){return{token:state.auth.token,username:state.auth.username,loading:state.assignments.loading};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{createASNT:function createASNT(token,asnt){return dispatch(_createASNT(token,asnt));}};};export default connect(mapStateToProps,mapDispatchToProps)(WrappedAssignmentCreate);","map":{"version":3,"sources":["H:/teach-me-django-master/src/containers/AssignmentCreate.js"],"names":["React","connect","Form","Input","Icon","Button","Divider","QuestionForm","Hoc","createASNT","FormItem","Item","AssignmentCreate","state","formCount","remove","setState","add","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","questions","i","length","push","title","question","choices","filter","el","answer","answers","asnt","teacher","username","token","getFieldDecorator","validateTrigger","rules","required","message","Component","WrappedAssignmentCreate","create","mapStateToProps","auth","loading","assignments","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input, Icon, Button, Divider } from \"antd\";\nimport QuestionForm from \"./QuestionForm\";\nimport Hoc from \"../hoc/hoc\";\nimport { createASNT } from \"../store/actions/assignments\";\n\nconst FormItem = Form.Item;\n\nclass AssignmentCreate extends React.Component {\n  state = {\n    formCount: 1\n  };\n\n  remove = () => {\n    const { formCount } = this.state;\n    this.setState({\n      formCount: formCount - 1\n    });\n  };\n\n  add = () => {\n    const { formCount } = this.state;\n    this.setState({\n      formCount: formCount + 1\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        const questions = [];\n        for (let i = 0; i < values.questions.length; i += 1) {\n          questions.push({\n            title: values.question[i],\n            choices: values.questions[i].choices.filter(el => el !== null),\n            answer: values.answers[i]\n          });\n        }\n        const asnt = {\n          teacher: this.props.username,\n          title: values.title,\n          questions\n        };\n        this.props.createASNT(this.props.token, asnt);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const questions = [];\n    for (let i = 0; i < this.state.formCount; i += 1) {\n      questions.push(\n        <Hoc key={i}>\n          {questions.length > 0 ? (\n            <Icon\n              className=\"dynamic-delete-button\"\n              type=\"minus-circle-o\"\n              disabled={questions.length === 0}\n              onClick={() => this.remove()}\n            />\n          ) : null}\n          <QuestionForm id={i} {...this.props} />\n          <Divider />\n        </Hoc>\n      );\n    }\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <h1>Create an assignment</h1>\n        <FormItem label={\"Title: \"}>\n          {getFieldDecorator(`title`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input a title\"\n              }\n            ]\n          })(<Input placeholder=\"Add a title\" />)}\n        </FormItem>\n        {questions}\n        <FormItem>\n          <Button type=\"secondary\" onClick={this.add}>\n            <Icon type=\"plus\" /> Add question\n          </Button>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedAssignmentCreate = Form.create()(AssignmentCreate);\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    loading: state.assignments.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createASNT: (token, asnt) => dispatch(createASNT(token, asnt))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedAssignmentCreate);\n"]},"metadata":{},"sourceType":"module"}