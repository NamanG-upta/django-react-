{"ast":null,"code":"import _classCallCheck from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"H:\\\\teach-me-django-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Form,Input,Icon,Button}from\"antd\";import Hoc from\"../hoc/hoc\";var FormItem=Form.Item;var id=0;var QuestionForm=/*#__PURE__*/function(_React$Component){_inherits(QuestionForm,_React$Component);var _super=_createSuper(QuestionForm);function QuestionForm(){var _this;_classCallCheck(this,QuestionForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.remove=function(k){var form=_this.props.form;var keys=form.getFieldValue(\"keys\");if(keys.length===1)return;form.setFieldsValue({keys:keys.filter(function(key){return key!==k;})});};_this.add=function(){var form=_this.props.form;var keys=form.getFieldValue(\"keys\");var nextKeys=keys.concat(++id);form.setFieldsValue({keys:nextKeys});};return _this;}_createClass(QuestionForm,[{key:\"render\",value:function render(){var _this2=this;var _this$props$form=this.props.form,getFieldDecorator=_this$props$form.getFieldDecorator,getFieldValue=_this$props$form.getFieldValue;getFieldDecorator(\"keys\",{initialValue:[]});var keys=getFieldValue(\"keys\");var formItems=keys.map(function(k,index){return/*#__PURE__*/React.createElement(FormItem,{label:index===0?\"Choices\":\"\",key:k},getFieldDecorator(\"questions[\".concat(_this2.props.id,\"]choices[\").concat(k,\"]\"),{validateTrigger:[\"onChange\",\"onBlur\"],rules:[{required:true,whitespace:true,message:\"Please input a choice to the question\"}]})(/*#__PURE__*/React.createElement(Input,{placeholder:\"Answer choice\"})),keys.length>1?/*#__PURE__*/React.createElement(Icon,{className:\"dynamic-delete-button\",type:\"minus-circle-o\",disabled:keys.length===1,onClick:function onClick(){return _this2.remove(k);}}):null);});return/*#__PURE__*/React.createElement(Hoc,null,/*#__PURE__*/React.createElement(FormItem,{label:\"Question: \"},getFieldDecorator(\"question[\".concat(this.props.id,\"]\"),{validateTrigger:[\"onChange\",\"onBlur\"],rules:[{required:true,message:\"Please input a question\"}]})(/*#__PURE__*/React.createElement(Input,{placeholder:\"Add a question\"}))),/*#__PURE__*/React.createElement(FormItem,{label:\"Answer: \"},getFieldDecorator(\"answers[\".concat(this.props.id,\"]\"),{validateTrigger:[\"onChange\",\"onBlur\"],rules:[{required:true,message:\"Please input an answer to this question\"}]})(/*#__PURE__*/React.createElement(Input,{placeholder:\"What is the answer?\"}))),formItems,/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(Button,{type:\"dashed\",onClick:this.add,style:{width:\"60%\"}},/*#__PURE__*/React.createElement(Icon,{type:\"plus\"}),\" Add an answer choice\")));}}]);return QuestionForm;}(React.Component);export default QuestionForm;","map":{"version":3,"sources":["H:/teach-me-django-master/src/containers/QuestionForm.js"],"names":["React","Form","Input","Icon","Button","Hoc","FormItem","Item","id","QuestionForm","remove","k","form","props","keys","getFieldValue","length","setFieldsValue","filter","key","add","nextKeys","concat","getFieldDecorator","initialValue","formItems","map","index","validateTrigger","rules","required","whitespace","message","width","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Icon, Button } from \"antd\";\nimport Hoc from \"../hoc/hoc\";\n\nconst FormItem = Form.Item;\n\nlet id = 0;\n\nclass QuestionForm extends React.Component {\n  remove = k => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    if (keys.length === 1) return;\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k)\n    });\n  };\n\n  add = () => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    const nextKeys = keys.concat(++id);\n    form.setFieldsValue({\n      keys: nextKeys\n    });\n  };\n\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    getFieldDecorator(\"keys\", { initialValue: [] });\n    const keys = getFieldValue(\"keys\");\n    const formItems = keys.map((k, index) => (\n      <FormItem label={index === 0 ? \"Choices\" : \"\"} key={k}>\n        {getFieldDecorator(`questions[${this.props.id}]choices[${k}]`, {\n          validateTrigger: [\"onChange\", \"onBlur\"],\n          rules: [\n            {\n              required: true,\n              whitespace: true,\n              message: \"Please input a choice to the question\"\n            }\n          ]\n        })(<Input placeholder=\"Answer choice\" />)}\n        {keys.length > 1 ? (\n          <Icon\n            className=\"dynamic-delete-button\"\n            type=\"minus-circle-o\"\n            disabled={keys.length === 1}\n            onClick={() => this.remove(k)}\n          />\n        ) : null}\n      </FormItem>\n    ));\n    return (\n      <Hoc>\n        <FormItem label=\"Question: \">\n          {getFieldDecorator(`question[${this.props.id}]`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input a question\"\n              }\n            ]\n          })(<Input placeholder=\"Add a question\" />)}\n        </FormItem>\n        <FormItem label=\"Answer: \">\n          {getFieldDecorator(`answers[${this.props.id}]`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input an answer to this question\"\n              }\n            ]\n          })(<Input placeholder=\"What is the answer?\" />)}\n        </FormItem>\n        {formItems}\n        <FormItem>\n          <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\n            <Icon type=\"plus\" /> Add an answer choice\n          </Button>\n        </FormItem>\n      </Hoc>\n    );\n  }\n}\n\nexport default QuestionForm;\n"]},"metadata":{},"sourceType":"module"}