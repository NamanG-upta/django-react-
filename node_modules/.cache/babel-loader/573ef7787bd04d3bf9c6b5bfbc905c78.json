{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst getASNTListStart = () => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_LIST_START\n  };\n};\n\nconst getASNTListSuccess = assignments => {\n  return {\n    type: actionTypes.GET_ASSIGNMENTS_LIST_SUCCESS,\n    assignments\n  };\n};\n\nconst getASNTListFail = error => {\n  return {\n    type: actionTypes.GET_ASSIGNMENTS_LIST_FAIL,\n    error: error\n  };\n};\n\nexport const getASNTS = token => {\n  return dispatch => {\n    dispatch(getASNTListStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(\"http://127.0.0.1:8000/assignments/\").then(res => {\n      const assignments = res.data;\n      dispatch(getASNTListSuccess(assignments));\n    }).catch(err => {\n      dispatch(getASNTListFail());\n    });\n  };\n};\n\nconst getASNTDetailStart = () => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_START\n  };\n};\n\nconst getASNTDetailSuccess = assignment => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_SUCCESS,\n    assignment\n  };\n};\n\nconst getASNTDetailFail = error => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_FAIL,\n    error: error\n  };\n};\n\nexport const getASNTSDetail = (token, id) => {\n  return dispatch => {\n    dispatch(getASNTDetailStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`http://127.0.0.1:8000/assignments/${id}/`).then(res => {\n      const assignment = res.data;\n      dispatch(getASNTDetailSuccess(assignment));\n    }).catch(err => {\n      dispatch(getASNTDetailFail());\n    });\n  };\n};\n\nconst createASNTStart = () => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_START\n  };\n};\n\nconst createASNTSuccess = assignment => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_SUCCESS,\n    assignment\n  };\n};\n\nconst createASNTFail = error => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_FAIL,\n    error: error\n  };\n};\n\nexport const createASNT = (token, asnt) => {\n  return dispatch => {\n    dispatch(createASNTStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.post(`http://127.0.0.1:8000/assignments/`, asnt).then(res => {\n      dispatch(createASNTSuccess());\n    }).catch(err => {\n      dispatch(createASNTFail());\n    });\n  };\n};","map":{"version":3,"sources":["H:/teach-me-django-master/src/store/actions/assignments.js"],"names":["axios","actionTypes","getASNTListStart","type","GET_ASSIGNMENT_LIST_START","getASNTListSuccess","assignments","GET_ASSIGNMENTS_LIST_SUCCESS","getASNTListFail","error","GET_ASSIGNMENTS_LIST_FAIL","getASNTS","token","dispatch","defaults","headers","Authorization","get","then","res","data","catch","err","getASNTDetailStart","GET_ASSIGNMENT_DETAIL_START","getASNTDetailSuccess","assignment","GET_ASSIGNMENT_DETAIL_SUCCESS","getASNTDetailFail","GET_ASSIGNMENT_DETAIL_FAIL","getASNTSDetail","id","createASNTStart","CREATE_ASSIGNMENT_START","createASNTSuccess","CREATE_ASSIGNMENT_SUCCESS","createASNTFail","CREATE_ASSIGNMENT_FAIL","createASNT","asnt","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst getASNTListStart = () => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_LIST_START\n  };\n};\n\nconst getASNTListSuccess = assignments => {\n  return {\n    type: actionTypes.GET_ASSIGNMENTS_LIST_SUCCESS,\n    assignments\n  };\n};\n\nconst getASNTListFail = error => {\n  return {\n    type: actionTypes.GET_ASSIGNMENTS_LIST_FAIL,\n    error: error\n  };\n};\n\nexport const getASNTS = token => {\n  return dispatch => {\n    dispatch(getASNTListStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(\"http://127.0.0.1:8000/assignments/\")\n      .then(res => {\n        const assignments = res.data;\n        dispatch(getASNTListSuccess(assignments));\n      })\n      .catch(err => {\n        dispatch(getASNTListFail());\n      });\n  };\n};\n\nconst getASNTDetailStart = () => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_START\n  };\n};\n\nconst getASNTDetailSuccess = assignment => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_SUCCESS,\n    assignment\n  };\n};\n\nconst getASNTDetailFail = error => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_FAIL,\n    error: error\n  };\n};\n\nexport const getASNTSDetail = (token, id) => {\n  return dispatch => {\n    dispatch(getASNTDetailStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(`http://127.0.0.1:8000/assignments/${id}/`)\n      .then(res => {\n        const assignment = res.data;\n        dispatch(getASNTDetailSuccess(assignment));\n      })\n      .catch(err => {\n        dispatch(getASNTDetailFail());\n      });\n  };\n};\n\nconst createASNTStart = () => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_START\n  };\n};\n\nconst createASNTSuccess = assignment => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_SUCCESS,\n    assignment\n  };\n};\n\nconst createASNTFail = error => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_FAIL,\n    error: error\n  };\n};\n\nexport const createASNT = (token, asnt) => {\n  return dispatch => {\n    dispatch(createASNTStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .post(`http://127.0.0.1:8000/assignments/`, asnt)\n      .then(res => {\n        dispatch(createASNTSuccess());\n      })\n      .catch(err => {\n        dispatch(createASNTFail());\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}