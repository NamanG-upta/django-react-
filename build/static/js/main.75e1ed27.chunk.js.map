{"version":3,"sources":["hoc/hoc.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","components/Result.js","containers/Profile.js","store/actions/gradedAssignments.js","containers/AssignmentList.js","store/actions/assignments.js","containers/Questions.js","components/Choices.js","containers/AssignmentDetail.js","containers/QuestionForm.js","containers/AssignmentCreate.js","routes.js","containers/Layout.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/assignments.js","store/reducers/gradedAssignments.js","index.js"],"names":["Hoc","props","children","authSuccess","user","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","FormItem","Form","Item","antIcon","style","fontSize","spin","NormalLoginForm","handleSubmit","e","preventDefault","form","validateFields","err","values","onAuth","userName","password","history","push","errorMessage","this","message","getFieldDecorator","loading","indicator","onSubmit","className","rules","required","prefix","color","placeholder","htmlType","marginRight","NavLink","to","React","Component","WrappedNormalLoginForm","create","connect","state","auth","username","axios","post","then","res","token","data","key","userId","is_student","user_type","is_teacher","expirationDate","Date","getTime","setItem","JSON","stringify","catch","actions","Option","Select","RegistrationForm","confirmDirty","validateFieldsAndScroll","userType","email","confirm","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","validator","onBlur","WrappedRegistrationForm","password1","password2","Result","percent","grade","width","Profile","undefined","getGradedASNTS","newProps","active","size","dataSource","gradedAssignments","renderItem","a","id","PureComponent","assignments","defaults","headers","Authorization","get","getGradedASNTListSuccess","AssignmentList","getASNTS","item","Link","title","margin","bordered","getASNTListSuccess","Step","Steps","Questions","current","questions","progressDot","map","q","index","length","onClick","next","submit","marginLeft","prev","RadioGroup","Radio","Group","radioStyle","display","height","lineHeight","Choices","questionId","usersAnswers","onChange","qId","change","choices","c","cardStyle","marginTop","marginBottom","AssignmentDetail","getASNTSDetail","match","params","success","asnt","asntId","currentAssignment","answers","createGradedASNT","Object","keys","order","question","assignment","getASNTDetailSuccess","console","log","QuestionForm","remove","k","setFieldsValue","filter","add","nextKeys","concat","initialValue","formItems","label","validateTrigger","whitespace","disabled","AssignmentCreate","formCount","i","el","answer","teacher","createASNT","WrappedAssignmentCreate","BaseRouter","Route","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","theme","mode","defaultSelectedKeys","isAuthenticated","padding","background","minHeight","textAlign","withRouter","App","onTryAutoSignup","parse","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","reducer","getASNTListStart","getASNTListFail","getASNTDetailStart","getASNTDetailFail","createASNTStart","createASNTSuccess","createASNTFail","getGradedASNTListStart","getGradedASNTListFail","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","assignmentReducer","gradedAssignmentReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.75e1ed27.chunk.js","sourcesContent":["const Hoc = props => props.children;\n\nexport default Hoc;\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const user = {\n          token: res.data.key,\n          username,\n          userId: res.data.user,\n          is_student: res.data.user_type.is_student,\n          is_teacher: res.data.user_type.is_teacher,\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (\n  username,\n  email,\n  password1,\n  password2,\n  is_student\n) => {\n  return dispatch => {\n    dispatch(authStart());\n    const user = {\n      username,\n      email,\n      password1,\n      password2,\n      is_student,\n      is_teacher: !is_student\n    };\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", user)\n      .then(res => {\n        const user = {\n          token: res.data.key,\n          username,\n          userId: res.data.user,\n          is_student,\n          is_teacher: !is_student,\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(user.expirationDate);\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const GET_ASSIGNMENT_LIST_START = \"GET_ASSIGNMENT_LIST_START\";\nexport const GET_ASSIGNMENTS_LIST_FAIL = \"GET_ASSIGNMENTS_LIST_FAIL\";\nexport const GET_ASSIGNMENTS_LIST_SUCCESS = \"GET_ASSIGNMENTS_LIST_SUCCESS\";\n\nexport const GET_ASSIGNMENT_DETAIL_START = \"GET_ASSIGNMENT_DETAIL_START\";\nexport const GET_ASSIGNMENT_DETAIL_FAIL = \"GET_ASSIGNMENT_DETAIL_FAIL\";\nexport const GET_ASSIGNMENT_DETAIL_SUCCESS = \"GET_ASSIGNMENT_DETAIL_SUCCESS\";\n\nexport const CREATE_ASSIGNMENT_START = \"CREATE_ASSIGNMENT_START\";\nexport const CREATE_ASSIGNMENT_FAIL = \"CREATE_ASSIGNMENT_FAIL\";\nexport const CREATE_ASSIGNMENT_SUCCESS = \"CREATE_ASSIGNMENT_SUCCESS\";\n\nexport const GET_GRADED_ASSIGNMENT_LIST_START =\n  \"GET_GRADED_ASSIGNMENT_LIST_START\";\nexport const GET_GRADED_ASSIGNMENTS_LIST_FAIL =\n  \"GET_GRADED_ASSIGNMENTS_LIST_FAIL\";\nexport const GET_GRADED_ASSIGNMENTS_LIST_SUCCESS =\n  \"GET_GRADED_ASSIGNMENTS_LIST_SUCCESS\";\n","import React from \"react\";\nimport { Form, Icon, Input, Button, Spin } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\n\nconst FormItem = Form.Item;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.password);\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error.message}</p>;\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        {errorMessage}\n        {this.props.loading ? (\n          <Spin indicator={antIcon} />\n        ) : (\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <FormItem>\n              {getFieldDecorator(\"userName\", {\n                rules: [\n                  { required: true, message: \"Please input your username!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Username\"\n                />\n              )}\n            </FormItem>\n\n            <FormItem>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              )}\n            </FormItem>\n\n            <FormItem>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{ marginRight: \"10px\" }}\n              >\n                Login\n              </Button>\n              Or\n              <NavLink style={{ marginRight: \"10px\" }} to=\"/signup/\">\n                {\" \"}\n                signup\n              </NavLink>\n            </FormItem>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) =>\n      dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedNormalLoginForm);\n","import React from \"react\";\nimport { Form, Input, Icon, Button, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        let is_student = false;\n        if (values.userType === \"student\") is_student = true;\n        this.props.onAuth(\n          values.userName,\n          values.email,\n          values.password,\n          values.confirm,\n          is_student\n        );\n        // this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem>\n          {getFieldDecorator(\"userName\", {\n            rules: [{ required: true, message: \"Please input your username!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                type: \"email\",\n                message: \"The input is not valid E-mail!\"\n              },\n              {\n                required: true,\n                message: \"Please input your E-mail!\"\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Email\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please input your password!\"\n              },\n              {\n                validator: this.validateToNextPassword\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"confirm\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please confirm your password!\"\n              },\n              {\n                validator: this.compareToFirstPassword\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              onBlur={this.handleConfirmBlur}\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator(\"userType\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select a user!\"\n              }\n            ]\n          })(\n            <Select placeholder=\"Select a user type\">\n              <Option value=\"student\">Student</Option>\n              <Option value=\"teacher\">Teacher</Option>\n            </Select>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{ marginRight: \"10px\" }}\n          >\n            Signup\n          </Button>\n          Or\n          <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\n            login\n          </NavLink>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2, is_student) =>\n      dispatch(\n        actions.authSignup(username, email, password1, password2, is_student)\n      )\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedRegistrationForm);\n","import React from \"react\";\nimport { Progress } from \"antd\";\n\nconst Result = props => (\n  <Progress type=\"circle\" percent={props.grade} width={80} />\n);\n\nexport default Result;\n","import React from \"react\";\nimport { List, Skeleton } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Result from \"../components/Result\";\nimport { getGradedASNTS } from \"../store/actions/gradedAssignments\";\nimport Hoc from \"../hoc/hoc\";\n\nclass Profile extends React.PureComponent {\n  componentDidMount() {\n    if (this.props.token !== undefined && this.props.token !== null) {\n      this.props.getGradedASNTS(this.props.username, this.props.token);\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.token !== this.props.token) {\n      if (newProps.token !== undefined && newProps.token !== null) {\n        this.props.getGradedASNTS(newProps.username, newProps.token);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Hoc>\n        {this.props.loading ? (\n          <Skeleton active />\n        ) : (\n          <Hoc>\n            <h1>Hi {this.props.username}</h1>\n            <List\n              size=\"large\"\n              dataSource={this.props.gradedAssignments}\n              renderItem={a => <Result key={a.id} grade={a.grade} />}\n            />\n          </Hoc>\n        )}\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    gradedAssignments: state.gradedAssignments.assignments,\n    loading: state.gradedAssignments.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGradedASNTS: (username, token) =>\n      dispatch(getGradedASNTS(username, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Profile);\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst getGradedASNTListStart = () => {\n  return {\n    type: actionTypes.GET_GRADED_ASSIGNMENT_LIST_START\n  };\n};\n\nconst getGradedASNTListSuccess = assignments => {\n  return {\n    type: actionTypes.GET_GRADED_ASSIGNMENTS_LIST_SUCCESS,\n    assignments\n  };\n};\n\nconst getGradedASNTListFail = error => {\n  return {\n    type: actionTypes.GET_GRADED_ASSIGNMENTS_LIST_FAIL,\n    error: error\n  };\n};\n\nexport const getGradedASNTS = (username, token) => {\n  return dispatch => {\n    dispatch(getGradedASNTListStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(`http://127.0.0.1:8000/graded-assignments/?username=${username}`)\n      .then(res => {\n        const assignments = res.data;\n        dispatch(getGradedASNTListSuccess(assignments));\n      })\n      .catch(err => {\n        dispatch(getGradedASNTListFail(err));\n      });\n  };\n};\n\nexport const createGradedASNT = (token, asnt) => {\n  return dispatch => {\n    //   dispatch(createASNTStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .post(`http://127.0.0.1:8000/graded-assignments/create/`, asnt)\n      .then(res => {\n        console.log(\"success\");\n        //   dispatch(createASNTSuccess());\n      })\n      .catch(err => {\n        //   dispatch(createASNTFail());\n      });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { List, Skeleton } from \"antd\";\nimport * as actions from \"../store/actions/assignments\";\nimport Hoc from \"../hoc/hoc\";\n\nclass AssignmentList extends React.PureComponent {\n  componentDidMount() {\n    if (this.props.token !== undefined && this.props.token !== null) {\n      this.props.getASNTS(this.props.token);\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.token !== this.props.token) {\n      if (newProps.token !== undefined && newProps.token !== null) {\n        this.props.getASNTS(newProps.token);\n      }\n    }\n  }\n\n  renderItem(item) {\n    return (\n      <Link to={`/assignments/${item.id}`}>\n        <List.Item>{item.title}</List.Item>\n      </Link>\n    );\n  }\n\n  render() {\n    return (\n      <Hoc>\n        {this.props.loading ? (\n          <Skeleton active />\n        ) : (\n          <div>\n            <h3 style={{ margin: \"16px 0\" }}>Assignment List</h3>\n            <List\n              size=\"large\"\n              bordered\n              dataSource={this.props.assignments}\n              renderItem={item => this.renderItem(item)}\n            />\n          </div>\n        )}\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    assignments: state.assignments.assignments,\n    loading: state.assignments.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getASNTS: token => dispatch(actions.getASNTS(token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AssignmentList);\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst getASNTListStart = () => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_LIST_START\n  };\n};\n\nconst getASNTListSuccess = assignments => {\n  return {\n    type: actionTypes.GET_ASSIGNMENTS_LIST_SUCCESS,\n    assignments\n  };\n};\n\nconst getASNTListFail = error => {\n  return {\n    type: actionTypes.GET_ASSIGNMENTS_LIST_FAIL,\n    error: error\n  };\n};\n\nexport const getASNTS = token => {\n  return dispatch => {\n    dispatch(getASNTListStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(\"http://127.0.0.1:8000/assignments/\")\n      .then(res => {\n        const assignments = res.data;\n        dispatch(getASNTListSuccess(assignments));\n      })\n      .catch(err => {\n        dispatch(getASNTListFail());\n      });\n  };\n};\n\nconst getASNTDetailStart = () => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_START\n  };\n};\n\nconst getASNTDetailSuccess = assignment => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_SUCCESS,\n    assignment\n  };\n};\n\nconst getASNTDetailFail = error => {\n  return {\n    type: actionTypes.GET_ASSIGNMENT_DETAIL_FAIL,\n    error: error\n  };\n};\n\nexport const getASNTSDetail = (token, id) => {\n  return dispatch => {\n    dispatch(getASNTDetailStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(`http://127.0.0.1:8000/assignments/${id}/`)\n      .then(res => {\n        const assignment = res.data;\n        dispatch(getASNTDetailSuccess(assignment));\n      })\n      .catch(err => {\n        dispatch(getASNTDetailFail());\n      });\n  };\n};\n\nconst createASNTStart = () => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_START\n  };\n};\n\nconst createASNTSuccess = assignment => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_SUCCESS,\n    assignment\n  };\n};\n\nconst createASNTFail = error => {\n  return {\n    type: actionTypes.CREATE_ASSIGNMENT_FAIL,\n    error: error\n  };\n};\n\nexport const createASNT = (token, asnt) => {\n  return dispatch => {\n    dispatch(createASNTStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .post(`http://127.0.0.1:8000/assignments/`, asnt)\n      .then(res => {\n        dispatch(createASNTSuccess());\n      })\n      .catch(err => {\n        dispatch(createASNTFail());\n      });\n  };\n};\n","import React from \"react\";\nimport { Steps, Button } from \"antd\";\n\nconst Step = Steps.Step;\n\nclass Questions extends React.Component {\n  state = {\n    current: 0\n  };\n\n  next() {\n    const current = this.state.current + 1;\n    this.setState({ current });\n  }\n\n  prev() {\n    const current = this.state.current - 1;\n    this.setState({ current });\n  }\n\n  render() {\n    const { current } = this.state;\n    const { questions } = this.props;\n    return (\n      <div>\n        <Steps progressDot current={current}>\n          {questions.map((q, index) => (\n            <Step key={index} />\n          ))}\n        </Steps>\n        <div>{questions[current]}</div>\n        <div>\n          {current < questions.length - 1 && (\n            <Button type=\"primary\" onClick={() => this.next()}>\n              Next\n            </Button>\n          )}\n          {current === questions.length - 1 && (\n            <Button type=\"primary\" onClick={() => this.props.submit()}>\n              Submit\n            </Button>\n          )}\n          {current > 0 && (\n            <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\n              Previous\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questions;\n","import React from \"react\";\nimport { Radio } from \"antd\";\n\nconst RadioGroup = Radio.Group;\n\nconst radioStyle = {\n  display: \"block\",\n  height: \"30px\",\n  lineHeight: \"30px\"\n};\n\nclass Choices extends React.Component {\n  render() {\n    const { questionId } = this.props;\n    const { usersAnswers } = this.props;\n    return (\n      <RadioGroup\n        onChange={(e, qId) => this.props.change(e, questionId)}\n        value={\n          usersAnswers[questionId] !== undefined &&\n          usersAnswers[questionId] !== null\n            ? usersAnswers[questionId]\n            : null\n        }\n      >\n        {this.props.choices.map((c, index) => {\n          return (\n            <Radio style={radioStyle} value={c} key={index}>\n              {c}\n            </Radio>\n          );\n        })}\n      </RadioGroup>\n    );\n  }\n}\n\nexport default Choices;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Skeleton, message } from \"antd\";\nimport Questions from \"./Questions\";\nimport Choices from \"../components/Choices\";\nimport { getASNTSDetail } from \"../store/actions/assignments\";\nimport { createGradedASNT } from \"../store/actions/gradedAssignments\";\nimport Hoc from \"../hoc/hoc\";\n\nconst cardStyle = {\n  marginTop: \"20px\",\n  marginBottom: \"20px\"\n};\n\nclass AssignmentDetail extends React.Component {\n  state = {\n    usersAnswers: {}\n  };\n\n  componentDidMount() {\n    if (this.props.token !== undefined && this.props.token !== null) {\n      this.props.getASNTSDetail(this.props.token, this.props.match.params.id);\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.token !== this.props.token) {\n      if (newProps.token !== undefined && newProps.token !== null) {\n        this.props.getASNTSDetail(newProps.token, this.props.match.params.id);\n      }\n    }\n  }\n\n  onChange = (e, qId) => {\n    const { usersAnswers } = this.state;\n    usersAnswers[qId] = e.target.value;\n    this.setState({ usersAnswers });\n  };\n\n  handleSubmit() {\n    message.success(\"Submitting your assignment!\");\n    const { usersAnswers } = this.state;\n    const asnt = {\n      username: this.props.username,\n      asntId: this.props.currentAssignment.id,\n      answers: usersAnswers\n    };\n    this.props.createGradedASNT(this.props.token, asnt);\n  }\n\n  render() {\n    const { currentAssignment } = this.props;\n    const { title } = currentAssignment;\n    const { usersAnswers } = this.state;\n    return (\n      <Hoc>\n        {Object.keys(currentAssignment).length > 0 ? (\n          <Hoc>\n            {this.props.loading ? (\n              <Skeleton active />\n            ) : (\n              <Card title={title}>\n                <Questions\n                  submit={() => this.handleSubmit()}\n                  questions={currentAssignment.questions.map(q => {\n                    return (\n                      <Card\n                        style={cardStyle}\n                        type=\"inner\"\n                        key={q.id}\n                        title={`${q.order}. ${q.question}`}\n                      >\n                        <Choices\n                          questionId={q.order}\n                          choices={q.choices}\n                          change={this.onChange}\n                          usersAnswers={usersAnswers}\n                        />\n                      </Card>\n                    );\n                  })}\n                />\n              </Card>\n            )}\n          </Hoc>\n        ) : null}\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    currentAssignment: state.assignments.currentAssignment,\n    loading: state.assignments.loading,\n    username: state.auth.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getASNTSDetail: (token, id) => dispatch(getASNTSDetail(token, id)),\n    createGradedASNT: (token, asnt) => dispatch(createGradedASNT(token, asnt))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AssignmentDetail);\n","import React from \"react\";\nimport { Form, Input, Icon, Button } from \"antd\";\nimport Hoc from \"../hoc/hoc\";\n\nconst FormItem = Form.Item;\n\nlet id = 0;\n\nclass QuestionForm extends React.Component {\n  remove = k => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    if (keys.length === 1) return;\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k)\n    });\n  };\n\n  add = () => {\n    const { form } = this.props;\n    const keys = form.getFieldValue(\"keys\");\n    const nextKeys = keys.concat(++id);\n    form.setFieldsValue({\n      keys: nextKeys\n    });\n  };\n\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    getFieldDecorator(\"keys\", { initialValue: [] });\n    const keys = getFieldValue(\"keys\");\n    const formItems = keys.map((k, index) => (\n      <FormItem label={index === 0 ? \"Choices\" : \"\"} key={k}>\n        {getFieldDecorator(`questions[${this.props.id}]choices[${k}]`, {\n          validateTrigger: [\"onChange\", \"onBlur\"],\n          rules: [\n            {\n              required: true,\n              whitespace: true,\n              message: \"Please input a choice to the question\"\n            }\n          ]\n        })(<Input placeholder=\"Answer choice\" />)}\n        {keys.length > 1 ? (\n          <Icon\n            className=\"dynamic-delete-button\"\n            type=\"minus-circle-o\"\n            disabled={keys.length === 1}\n            onClick={() => this.remove(k)}\n          />\n        ) : null}\n      </FormItem>\n    ));\n    return (\n      <Hoc>\n        <FormItem label=\"Question: \">\n          {getFieldDecorator(`question[${this.props.id}]`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input a question\"\n              }\n            ]\n          })(<Input placeholder=\"Add a question\" />)}\n        </FormItem>\n        <FormItem label=\"Answer: \">\n          {getFieldDecorator(`answers[${this.props.id}]`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input an answer to this question\"\n              }\n            ]\n          })(<Input placeholder=\"What is the answer?\" />)}\n        </FormItem>\n        {formItems}\n        <FormItem>\n          <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\n            <Icon type=\"plus\" /> Add an answer choice\n          </Button>\n        </FormItem>\n      </Hoc>\n    );\n  }\n}\n\nexport default QuestionForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Input, Icon, Button, Divider } from \"antd\";\nimport QuestionForm from \"./QuestionForm\";\nimport Hoc from \"../hoc/hoc\";\nimport { createASNT } from \"../store/actions/assignments\";\n\nconst FormItem = Form.Item;\n\nclass AssignmentCreate extends React.Component {\n  state = {\n    formCount: 1\n  };\n\n  remove = () => {\n    const { formCount } = this.state;\n    this.setState({\n      formCount: formCount - 1\n    });\n  };\n\n  add = () => {\n    const { formCount } = this.state;\n    this.setState({\n      formCount: formCount + 1\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        const questions = [];\n        for (let i = 0; i < values.questions.length; i += 1) {\n          questions.push({\n            title: values.question[i],\n            choices: values.questions[i].choices.filter(el => el !== null),\n            answer: values.answers[i]\n          });\n        }\n        const asnt = {\n          teacher: this.props.username,\n          title: values.title,\n          questions\n        };\n        this.props.createASNT(this.props.token, asnt);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const questions = [];\n    for (let i = 0; i < this.state.formCount; i += 1) {\n      questions.push(\n        <Hoc key={i}>\n          {questions.length > 0 ? (\n            <Icon\n              className=\"dynamic-delete-button\"\n              type=\"minus-circle-o\"\n              disabled={questions.length === 0}\n              onClick={() => this.remove()}\n            />\n          ) : null}\n          <QuestionForm id={i} {...this.props} />\n          <Divider />\n        </Hoc>\n      );\n    }\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <h1>Create an assignment</h1>\n        <FormItem label={\"Title: \"}>\n          {getFieldDecorator(`title`, {\n            validateTrigger: [\"onChange\", \"onBlur\"],\n            rules: [\n              {\n                required: true,\n                message: \"Please input a title\"\n              }\n            ]\n          })(<Input placeholder=\"Add a title\" />)}\n        </FormItem>\n        {questions}\n        <FormItem>\n          <Button type=\"secondary\" onClick={this.add}>\n            <Icon type=\"plus\" /> Add question\n          </Button>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedAssignmentCreate = Form.create()(AssignmentCreate);\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    loading: state.assignments.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createASNT: (token, asnt) => dispatch(createASNT(token, asnt))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedAssignmentCreate);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Hoc from \"./hoc/hoc\";\n\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport Profile from \"./containers/Profile\";\nimport AssignmentList from \"./containers/AssignmentList\";\nimport AssignmentDetail from \"./containers/AssignmentDetail\";\nimport AssignmentCreate from \"./containers/AssignmentCreate\";\n\nconst BaseRouter = () => (\n  <Hoc>\n    <Route exact path=\"/\" component={AssignmentList} />\n    <Route exact path=\"/create/\" component={AssignmentCreate} />\n    <Route exact path=\"/login/\" component={Login} />\n    <Route exact path=\"/signup/\" component={Signup} />\n    <Route exact path=\"/assignments/:id\" component={AssignmentDetail} />\n    <Route exact path=\"/profile/:id\" component={Profile} />\n  </Hoc>\n);\n\nexport default BaseRouter;\n","import React from \"react\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n  render() {\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"2\"]}\n            style={{ lineHeight: \"64px\" }}\n          >\n            {this.props.isAuthenticated ? (\n              <Menu.Item key=\"2\" onClick={this.props.logout}>\n                Logout\n              </Menu.Item>\n            ) : (\n              <Menu.Item key=\"2\">\n                <Link to=\"/login\">Login</Link>\n              </Menu.Item>\n            )}\n          </Menu>\n        </Header>\n        <Content style={{ padding: \"0 50px\" }}>\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\n            <Breadcrumb.Item>\n              <Link to=\"/\">Home</Link>\n            </Breadcrumb.Item>\n            {this.props.token !== null ? (\n              <Breadcrumb.Item>\n                <Link to={`/profile/${this.props.userId}`}>Profile</Link>\n              </Breadcrumb.Item>\n            ) : null}\n            {this.props.token !== null && this.props.is_teacher ? (\n              <Breadcrumb.Item>\n                <Link to=\"/create\">Create</Link>\n              </Breadcrumb.Item>\n            ) : null}\n          </Breadcrumb>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            {this.props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          Ant Design ©2016 Created by Ant UED\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.userId,\n    token: state.auth.token,\n    is_teacher: state.auth.is_teacher\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(actions.logout())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CustomLayout)\n);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport BaseRouter from \"./routes\";\nimport \"antd/dist/antd.css\";\nimport * as actions from \"./store/actions/auth\";\n\nimport CustomLayout from \"./containers/Layout\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n      <Router>\n        <CustomLayout {...this.props}>\n          <BaseRouter />\n        </CustomLayout>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  username: null,\n  is_student: null,\n  is_teacher: null,\n  userId: null,\n  error: null,\n  loading: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.user.token,\n    username: action.user.username,\n    is_student: action.user.is_student,\n    is_teacher: action.user.is_teacher,\n    userId: action.user.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  assignments: [],\n  currentAssignment: {},\n  error: null,\n  loading: false\n};\n\nconst getASNTListStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst getASNTListSuccess = (state, action) => {\n  return updateObject(state, {\n    assignments: action.assignments,\n    error: null,\n    loading: false\n  });\n};\n\nconst getASNTListFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst getASNTDetailStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst getASNTDetailSuccess = (state, action) => {\n  return updateObject(state, {\n    currentAssignment: action.assignment,\n    error: null,\n    loading: false\n  });\n};\n\nconst getASNTDetailFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst createASNTStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst createASNTSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: false\n  });\n};\n\nconst createASNTFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_ASSIGNMENT_LIST_START:\n      return getASNTListStart(state, action);\n    case actionTypes.GET_ASSIGNMENTS_LIST_SUCCESS:\n      return getASNTListSuccess(state, action);\n    case actionTypes.GET_ASSIGNMENTS_LIST_FAIL:\n      return getASNTListFail(state, action);\n    case actionTypes.GET_ASSIGNMENT_DETAIL_START:\n      return getASNTDetailStart(state, action);\n    case actionTypes.GET_ASSIGNMENT_DETAIL_SUCCESS:\n      return getASNTDetailSuccess(state, action);\n    case actionTypes.GET_ASSIGNMENT_DETAIL_FAIL:\n      return getASNTDetailFail(state, action);\n    case actionTypes.CREATE_ASSIGNMENT_START:\n      return createASNTStart(state, action);\n    case actionTypes.CREATE_ASSIGNMENT_SUCCESS:\n      return createASNTSuccess(state, action);\n    case actionTypes.CREATE_ASSIGNMENT_FAIL:\n      return createASNTFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  assignments: [],\n  error: null,\n  loading: false\n};\n\nconst getGradedASNTListStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst getGradedASNTListSuccess = (state, action) => {\n  return updateObject(state, {\n    assignments: action.assignments,\n    error: null,\n    loading: false\n  });\n};\n\nconst getGradedASNTListFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_GRADED_ASSIGNMENT_LIST_START:\n      return getGradedASNTListStart(state, action);\n    case actionTypes.GET_GRADED_ASSIGNMENTS_LIST_SUCCESS:\n      return getGradedASNTListSuccess(state, action);\n    case actionTypes.GET_GRADED_ASSIGNMENTS_LIST_FAIL:\n      return getGradedASNTListFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport authReducer from \"./store/reducers/auth\";\nimport assignmentReducer from \"./store/reducers/assignments\";\nimport gradedAssignmentReducer from \"./store/reducers/gradedAssignments\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  assignments: assignmentReducer,\n  gradedAssignments: gradedAssignmentReducer\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}